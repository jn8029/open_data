testPriorityQueue.cpp:25: passed: pQueue.size()==0 for: 0 == 0
testPriorityQueue.cpp:26: passed: pQueue.deleteMin()
pQueue
1       2       3       4       5       6       7       8       9       10
Compare
1       2       3       4       5       6       7       8       9       10
------------------------------------
testPriorityQueue.cpp:50: passed: pQueue.size()==size for: 10 == 10
testPriorityQueue.cpp:55: passed: popped==comparisonArray[i] for: 1 == 1
testPriorityQueue.cpp:55: passed: popped==comparisonArray[i] for: 2 == 2
testPriorityQueue.cpp:55: passed: popped==comparisonArray[i] for: 3 == 3
testPriorityQueue.cpp:55: passed: popped==comparisonArray[i] for: 4 == 4
testPriorityQueue.cpp:55: passed: popped==comparisonArray[i] for: 5 == 5
testPriorityQueue.cpp:55: passed: popped==comparisonArray[i] for: 6 == 6
testPriorityQueue.cpp:55: passed: popped==comparisonArray[i] for: 7 == 7
testPriorityQueue.cpp:55: passed: popped==comparisonArray[i] for: 8 == 8
testPriorityQueue.cpp:55: passed: popped==comparisonArray[i] for: 9 == 9
testPriorityQueue.cpp:55: passed: popped==comparisonArray[i] for: 10 == 10
testPriorityQueue.cpp:57: passed: pQueue.deleteMin()
9       8       7       6       5       4       3       2       1       0
0       1       2       3       4       5       6       7       8       9
------------------------------------
testPriorityQueue.cpp:81: passed: pQueue.size()==size for: 10 == 10
testPriorityQueue.cpp:86: passed: popped==comparisonArray[i] for: 0 == 0
testPriorityQueue.cpp:86: passed: popped==comparisonArray[i] for: 1 == 1
testPriorityQueue.cpp:86: passed: popped==comparisonArray[i] for: 2 == 2
testPriorityQueue.cpp:86: passed: popped==comparisonArray[i] for: 3 == 3
testPriorityQueue.cpp:86: passed: popped==comparisonArray[i] for: 4 == 4
testPriorityQueue.cpp:86: passed: popped==comparisonArray[i] for: 5 == 5
testPriorityQueue.cpp:86: passed: popped==comparisonArray[i] for: 6 == 6
testPriorityQueue.cpp:86: passed: popped==comparisonArray[i] for: 7 == 7
testPriorityQueue.cpp:86: passed: popped==comparisonArray[i] for: 8 == 8
testPriorityQueue.cpp:86: passed: popped==comparisonArray[i] for: 9 == 9
testPriorityQueue.cpp:88: passed: pQueue.deleteMin()
pQueue
9       6       6       2       8       0       9       2       3       3
Compare
0       2       2       3       3       6       6       8       9       9
------------------------------------
testPriorityQueue.cpp:113: passed: pQueue.size()==size for: 10 == 10
testPriorityQueue.cpp:118: passed: popped==comparisonArray[i] for: 0 == 0
testPriorityQueue.cpp:118: passed: popped==comparisonArray[i] for: 2 == 2
testPriorityQueue.cpp:118: passed: popped==comparisonArray[i] for: 2 == 2
testPriorityQueue.cpp:118: passed: popped==comparisonArray[i] for: 3 == 3
testPriorityQueue.cpp:118: passed: popped==comparisonArray[i] for: 4 == 4
testPriorityQueue.cpp:118: passed: popped==comparisonArray[i] for: 7 == 7
testPriorityQueue.cpp:118: passed: popped==comparisonArray[i] for: 7 == 7
testPriorityQueue.cpp:118: passed: popped==comparisonArray[i] for: 8 == 8
testPriorityQueue.cpp:118: passed: popped==comparisonArray[i] for: 9 == 9
testPriorityQueue.cpp:118: passed: popped==comparisonArray[i] for: 9 == 9
testPriorityQueue.cpp:120: passed: pQueue.deleteMin()
Passed all 4 test cases with 38 assertions.